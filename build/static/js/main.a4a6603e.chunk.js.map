{"version":3,"sources":["Utilities/FetchUtilities.ts","Utilities/EventUtilities.ts","Pages/Aside.tsx","Pages/Hero.tsx","Context/CustomerContext.tsx","Utilities/FormUtilities.tsx","Pages/Application.tsx","Pages/Calls.tsx","Pages/Stats.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fetchMainRoutes","routeName","stateFunc","stateErr","axios","then","res","status","theData","data","console","log","catch","err","getCustomerId","stateFunct","id","Aside","props","history","useHistory","customers","setCustomerId","asyncErr","className","length","map","a","i","onClick","push","name","Hero","CurrentCustomerContext","createContext","Applicationform","initialValues","description","hasSupportContract","customerId","useContext","form","useFormik","enableReinitialize","validationSchema","Yup","max","required","onSubmit","value","action","route","post","response","clickEvent","resetForm","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","onBlur","handleBlur","values","touched","errors","checked","ApplicationEdit","init","applicationId","appName","appHasSupportContract","support","appDescription","describe","formik","actions","comingData","put","editData","DoSelected","needed","callForm","select","callId","patch","patchCall","icon","faClipboardCheck","Applications","service","icons","useState","rotate","setRotate","error","setError","routeData","setRouteData","setneeded","isEdit","setIsEdit","editObj","setEditObj","useEffect","currentCustomer","filter","customer","doRotate","header","size","doRotate2","edit","installationDate","substring","create","Call","setFilter","getFilter","application","Stats","openCalls","totalCalls","responded","awaitingResponse","closedCalls","satisfactory","unsatisfactory","lastThreeMonths","month1","month2","month3","stats","setStats","get","labels","datasets","label","font","fill","backgroundColor","borderColor","tension","borderWidth","pointBorderColor","pointBorderWidth","options","scales","yAxes","ticks","beginAtZero","App","setCustomers","setAsynErr","customerData","setCustomerData","Promise","all","call","statistics","fetchCustomerRoutes","location","useLocation","pathname","to","Provider","exact","path","faDatabase","faEdit","delete","faTrashAlt","faPen","faPhoneSquare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4a6603e.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {Str, Func, Obj, Num, Appedit, Callpatch} from './CustomTypes'\r\n\r\n//this fetches data without parameters\r\nexport const fetchMainRoutes = (routeName:Str, stateFunc: Func, stateErr: Func) =>{\r\n    axios(`https://techtestcalllogapi.azurewebsites.net/api/${routeName}`)\r\n      .then(res=>{\r\n        if(res.status === 204){\r\n          stateErr('No data exist for this request')\r\n        }\r\n        const theData: [] | string | object = res.data\r\n        stateFunc(theData)\r\n        stateErr('')\r\n        console.log(res.status)\r\n      })\r\n      .catch(err => {\r\n        stateErr(\"Aww aww, there's an issue getting data\")\r\n      })\r\n}\r\n\r\n//this fetches data related to a particluar customer \r\nexport const fetchCustomerRoutes = (customerId: Num, stateFunc: Func, stateErr: Func) =>{\r\n  try{\r\n    const application = () => axios.get(\r\n        `https://techtestcalllogapi.azurewebsites.net/api/Application/${customerId}`\r\n        )\r\n    const call = () => axios.get(\r\n        `https://techtestcalllogapi.azurewebsites.net/api/Call/${customerId}`\r\n        )\r\n    const statistics= () => axios.get(\r\n        `https://techtestcalllogapi.azurewebsites.net/api/Statistics/${customerId}`\r\n        )\r\n    const status = () => axios.get(\r\n        `https://techtestcalllogapi.azurewebsites.net/api/Status/${customerId}`\r\n        )\r\n    Promise.all([application(), call(), statistics(), status()])\r\n        .then((response: any)=>{\r\n            const application = response[0].data\r\n            const call = response[1].data\r\n            const statistics = response[2].data\r\n            const status = response[3].data\r\n\r\n            const results = [application, call, statistics, status]\r\n            \r\n            stateFunc({id:customerId, data:results})\r\n            stateErr('')\r\n        })\r\n      }catch(err) {\r\n    stateErr(\"There seems to be a problem getting data for this customer\")\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n//post requests\r\nexport const postData = (routeName: Str, data:Obj) =>{\r\n  axios.post(`https://techtestcalllogapi.azurewebsites.net/api/${routeName}`, data)\r\n  .then(response=> console.log(response.status))\r\n  .catch(err=> console.log(err))\r\n}\r\n\r\n//put request\r\nexport const editData = (routeName: Str, comingData: Appedit)=>{\r\n  const data: object={\r\n    applicationId: comingData.applicationId,\r\n    name: comingData.appName,\r\n    description: comingData.appDescription,\r\n    hasSupportContract: comingData.appHasSupportContract\r\n  }\r\n  axios.put(`https://techtestcalllogapi.azurewebsites.net/api/${routeName}`, data)\r\n  .then(response=> console.log(response.status))\r\n  .catch(err=> console.log(err))\r\n}\r\n\r\nexport const patchCall = (data: Callpatch) =>{\r\n  axios.patch(`https://techtestcalllogapi.azurewebsites.net/api/Call`, data)\r\n    .then(response=> console.log(response.status))\r\n    .catch(err=> console.log(err))\r\n}\r\n\r\nexport const singleFetch = (id: number, stateFunc: Func, stateErr: Func) =>{\r\n  axios.get(`https://techtestcalllogapi.azurewebsites.net/api/Statistics/${id}`)\r\n    .then(response=> stateFunc(response.data))\r\n    .catch(err=> stateErr(err))\r\n}\r\n\r\n\r\n","import { Num } from \"./CustomTypes\"\r\n\r\nexport const getCustomerId = (stateFunct: Function, id: Num) =>{\r\n    stateFunct(id)\r\n}","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport {Func, Cust, Arr2, Str} from '../Utilities/CustomTypes'\r\n\r\n\r\n\r\nexport default function Aside (props: {customers: Arr2, setCustomerId: Func, getCustomerId:Func, asyncErr:Str}){\r\n    \r\n\r\n    let history = useHistory()\r\n\r\n    \r\n    const {customers, setCustomerId, getCustomerId, asyncErr} = props\r\n    return (\r\n        <div className='h-50 pa3 flex justify-center flex-column br4'>\r\n            {customers.length >0 ? customers.map((a:Cust, i: number)=>(\r\n                <div \r\n                key={i} \r\n                className={`customer flex flex-column justify-center h-75 pointer`} \r\n                onClick={()=> {\r\n                    getCustomerId(setCustomerId, a.id)\r\n                    \r\n                    history.push(`/statistics`)\r\n                }}>\r\n                    <div className='flex id'>\r\n                        <div className='f5 measure lh-copy ttu'>Customer ID:</div>\r\n                        <div className='measure f5 lh-copy'>{a.id}</div>\r\n                    </div>\r\n                    <div className='measure f4 lh-solid name'>{a.name}</div>\r\n                </div>\r\n            )) \r\n            :(\r\n                <div>\r\n                    {asyncErr}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Hero(){\r\n    return(\r\n        <div className='w-80 flex justify-center items-center flex-column hero'>\r\n            <div className='f2 textalt measure b lh-copy'>Welcome!</div>\r\n            <h1 className='f-headline'>Call Handling System</h1>\r\n            <p className='f4 textalt measure b lh-copy'>Click on customer name to view and edit records</p>\r\n        </div>\r\n    )\r\n}","import {createContext} from 'react'\r\nimport {Fetched} from '../Utilities/CustomTypes'\r\n\r\nexport const CurrentCustomerContext = createContext<Fetched>({id: 0, data:[]})\r\n\r\n","import React, {useContext}from 'react'\r\nimport { useFormik } from 'formik';\r\nimport {Appedit, ApplicationData, Callpatch, Calltype, Func} from './CustomTypes'\r\nimport {CurrentCustomerContext} from '../Context/CustomerContext'\r\nimport {postData, editData, patchCall} from './FetchUtilities'\r\nimport * as Yup from 'yup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClipboardCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport  function Applicationform(props: {clickEvent:Func, route:string}){\r\n\r\n    const currentCustomer = useContext(CurrentCustomerContext)\r\n\r\n    //console.log(currentCustomer.id, 'yeah')\r\n\r\n    const initialValues: ApplicationData = {\r\n        name: '',\r\n        description: '',\r\n        hasSupportContract: false,\r\n        customerId: currentCustomer.id\r\n    }\r\n    const form = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues,\r\n        validationSchema:Yup.object({\r\n            name: Yup.string()\r\n                    .max(15, 'Too long').required('Name Required'),\r\n            description: Yup.string()\r\n                    .max(40, 'Maximum of 40 characters allowed')\r\n                    .required('Description Required'),\r\n            customerId: Yup.number().required('Required')\r\n        }),\r\n        onSubmit:(value, action)=>{\r\n            postData(props.route, value)\r\n            props.clickEvent()\r\n            action.resetForm()\r\n        }\r\n    })\r\n    return(\r\n        \r\n            <form onSubmit={form.handleSubmit} className='w-75 flex flex-column justify-around h-75 b appform'>\r\n            <label htmlFor=\"Name\">Name</label>\r\n            <input\r\n            type='text'\r\n            id='name'\r\n            name='name'\r\n            placeholder='The installed application'\r\n            className=''\r\n            onChange={form.handleChange}\r\n            onBlur={form.handleBlur}\r\n            value={form.values.name}\r\n            />\r\n            {form.touched.name && form.errors.name ?\r\n            <div className='highlight b f6'>{form.errors.name}</div>: null}\r\n\r\n            <label htmlFor=\"description\">Description</label>\r\n            <input\r\n            type='text'\r\n            id='description'\r\n            placeholder='A description of the application'\r\n            name='description'\r\n            onChange={form.handleChange}\r\n            onBlur={form.handleBlur}\r\n            value={form.values.description}\r\n            />\r\n            {form.touched.description && form.errors.description ?\r\n            <div className='highlight b f6'>{form.errors.description}</div>: null}\r\n\r\n            <label className=''>\r\n             <input\r\n               type=\"checkbox\"\r\n               className='w1 h1 mr1 mv1'\r\n               name=\"hasSupportContract\"\r\n               checked={form.values.hasSupportContract}\r\n               onChange={form.handleChange}\r\n               onBlur={form.handleBlur}\r\n               \r\n             />\r\n            Has Support Contract?\r\n           </label>\r\n\r\n            <label htmlFor='customerId'>Customer Id</label>\r\n           <input\r\n            type='number'\r\n            id='customerId'\r\n            name='customerId'\r\n            onChange={form.handleChange}\r\n            onBlur={form.handleBlur}\r\n            value={form.values.customerId}\r\n            />\r\n            {form.touched.customerId && form.errors.customerId ?\r\n            <div className='highlight b f6'>{form.errors.customerId}</div>: null}\r\n\r\n           <button type=\"submit\" className='mt1'>Submit</button>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport function ApplicationEdit (props: {clickEvent:Func, route:string, id: number, name: string, support: boolean, describe: string}){\r\n    const {route, id, name, support, describe} = props\r\n    const init: Appedit = {\r\n        applicationId: id,\r\n        appName: name,\r\n        appHasSupportContract: support,\r\n        appDescription: describe,\r\n    }\r\n\r\n    const formik= useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: init,\r\n        validationSchema: Yup.object(\r\n            {\r\n                applicationId: Yup.number().required('Application ID Required'),\r\n                appName: Yup.string().max(15, 'Too long').required('Application name required'),\r\n                appDescription: Yup.string().max(40, 'Too long').required('Description Required'),\r\n            }\r\n        ),\r\n        onSubmit:(values, actions) =>{\r\n            //alert(JSON.stringify(value, null, 2));\r\n            editData(route, values)\r\n            props.clickEvent()\r\n            actions.resetForm()\r\n        }\r\n    })\r\n\r\n    return(\r\n        <form onSubmit={formik.handleSubmit} className='w-75 b flex flex-column justify-around h-75 b editform'>\r\n             <label htmlFor='applicationId'>Application Id</label>\r\n           <input\r\n            type='number'\r\n            id='applicationId'\r\n            name='applicationId'\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.applicationId}\r\n            />\r\n            {formik.touched.applicationId && formik.errors.applicationId ?\r\n            <div className='highlight b f6'>{formik.errors.applicationId}</div>: null}\r\n\r\n            <label htmlFor='name'>Application Name</label>\r\n            <input\r\n            type='text'\r\n            id='appName'\r\n            name='appName'\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.appName}\r\n            />\r\n            {formik.touched.appName && formik.errors.appName ?\r\n            <div className='highlight b f6'>{formik.errors.appName}</div>: null}\r\n\r\n            <label className=''>\r\n            <input\r\n            type=\"checkbox\"\r\n            className='w1 h1 mr1 mv1'\r\n            name=\"appHasSupportContract\"\r\n            checked={formik.values.appHasSupportContract}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            />\r\n            Has Support Contract?\r\n           </label>\r\n\r\n           <label htmlFor=\"appDescription\">Description</label>\r\n            <input\r\n            type='text'\r\n            id='appDescription'\r\n            placeholder='A description of the application'\r\n            name='appDescription'\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.appDescription}\r\n            />\r\n            {formik.touched.appDescription && formik.errors.appDescription ?\r\n            <div className='highlight b f6'>{formik.errors.appDescription}</div>: null}\r\n            <button type=\"submit\" className='mt1'>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport function DoSelected (props: {needed: Calltype}){\r\n    const {needed} = props\r\n\r\n    const doColor =()=>{\r\n        if(needed.status.description === 'Open'){\r\n            return 'sel2'\r\n        }else if(needed.status.description === 'Closed'){\r\n            return 'sel1'\r\n        }else if(needed.status.description === 'Re-Opened'){\r\n            return 'sel3'\r\n        }else if(needed.status.description === 'AwaitingCustomer'){\r\n            return 'sel4'\r\n        }\r\n    }\r\n\r\n    const callForm = useFormik(\r\n        {   \r\n            enableReinitialize: true,\r\n            initialValues:{\r\n                select: needed.status.description,\r\n            },\r\n            onSubmit: values=>{\r\n                const data: Callpatch= {\r\n                    callId: needed.id,\r\n                    status: 0\r\n                }\r\n\r\n               if(values.select === 'Open'){\r\n                   data.status = 101\r\n               }else if(values.select === 'Closed'){\r\n                   data.status = 102\r\n               }else if(values.select === 'Re-Opened'){\r\n                   data.status = 103\r\n               }else if(values.select === 'AwaitingCustomer'){\r\n                   data.status = 104\r\n               }\r\n                patchCall(data)\r\n                //alert(JSON.stringify(data, null, 2));\r\n            },\r\n        }\r\n    )\r\n    return (\r\n        <form onSubmit={callForm.handleSubmit} className='formselect flex justify-start'>\r\n            <select value={callForm.values.select} \r\n            onChange={callForm.handleChange} \r\n            onBlur={callForm.handleBlur} \r\n            className={`h2 ${doColor()}`}\r\n            name={'select'}\r\n            >\r\n                <option>Open</option>\r\n                <option>Closed</option>\r\n                <option>Re-Opened</option>\r\n                <option>AwaitingCustomer</option>\r\n            </select>\r\n            <button type='submit' \r\n            className={`w2 h2 br-100 flex flex-row bn justify-center items-center iconsbg ml1 pointer`}>\r\n                <FontAwesomeIcon icon={faClipboardCheck}/>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useContext }  from 'react'\r\nimport {Str, Icons, Apparr} from '../Utilities/CustomTypes'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {ApplicationEdit, Applicationform} from '../Utilities/FormUtilities'\r\nimport { fetchMainRoutes } from '../Utilities/FetchUtilities'\r\nimport {CurrentCustomerContext} from '../Context/CustomerContext'\r\n\r\nexport default function Applications (props: \r\n    {service:Str,\r\n    className:Str, icons: Icons,\r\n    }){\r\n    const {service, className, icons} = props\r\n\r\n\r\n    const [rotate, setRotate] = useState(false)\r\n    const [error, setError] =useState<Str>('')\r\n    const [routeData, setRouteData] = useState<Apparr>([])\r\n    const [needed, setneeded] = useState<Apparr>([])\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [editObj, setEditObj] = useState({id: 0, name: '', describe: '', support: false})\r\n\r\n    useEffect(()=>{\r\n        fetchMainRoutes(service, setRouteData, setError)\r\n    }, [service])\r\n\r\n    let currentCustomer = useContext(CurrentCustomerContext)\r\n\r\n    useEffect(()=>{\r\n        if(routeData.length > 0){\r\n            setneeded(routeData.filter(a=> a.customer.id === currentCustomer.id))\r\n        }\r\n    }, [routeData, currentCustomer.id])\r\n    \r\n    \r\n    const doRotate = () =>{\r\n        setRotate(!rotate)\r\n        setIsEdit(false)\r\n    }\r\n\r\n    const doRotate2 = (id: number, name: string, describe: string, support: boolean)=>{\r\n        setIsEdit(true)\r\n        setRotate(!rotate)\r\n        setEditObj({id, name, describe, support})\r\n    }\r\n\r\n    const {id, name, describe, support} = editObj\r\n\r\n    return (\r\n        <div className={`${className} ${rotate && ''}`}>\r\n            {needed.length > 0 && service === 'Application'? <h1 className='customername f3 lh-title'>{needed[0].customer.name}</h1> : null}\r\n            <div className={`block1inner relative w-100 h-100 shadow-4 br4 ${rotate && 'rotate'}`}>\r\n                <div className='front'>\r\n                    <div className='absolute top-1 left-1 flex items-center b highlight verticaltext'>\r\n                        <FontAwesomeIcon icon={icons.header} size='2x'/>\r\n                        <div className='f6 measure lh-title mt2 text flex'>{service}</div>\r\n                    </div>\r\n                  <div className=' scroll'>\r\n                    <div className={`${rotate ? 'dn' : 'flex w-100 flex-wrap center justify-center items-start pa3'}`}>\r\n                        \r\n                        {needed.length > 0 && service === 'Application'\r\n                        ?   (\r\n                               needed.map((data, i)=>{\r\n                                   return (\r\n                                       <div key={i} className='w-30 textaltbg pa3 ma2 f5 measure b br3 relative'>\r\n                                        <div className='flex justify-around absolute top-1 right-1 highlight'>\r\n                                            <button \r\n                                            className='iconsbg h2 w2 br-100 flex justify-center items-center mh1 bn highlight pointer'\r\n                                            onClick={()=> doRotate2(data.id, data.name, data.description, data.hasSupportContract)}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={icons.edit} /> \r\n                                            </button>\r\n                                        </div>\r\n                                        <div className='blockid f6 measure lh-copy'>Application ID: {data.id}</div>\r\n                                        <div className='f5 measure lh-copy'>{data.name}</div>\r\n                                        <div className='f6 measure lh-copy'>{data.description}</div>\r\n                                        <div className='f6 measure lh-copy'>Installed: {data.installationDate.substring(0, 10)}</div>\r\n                                        <div className='f6 measure lh-copy'>Has Support Contract: {data.hasSupportContract ? 'Yes' : 'No'}</div>\r\n                                       </div>\r\n                                   )\r\n                               })\r\n                            )\r\n                        : <div>Customer has no records for {service}</div> || <div>{error}</div>} \r\n                    </div>\r\n                    </div>\r\n                    <button className='flex items-center flex-column absolute shadow-3 highlightbg text iconsbg\r\n                    bottom-1 left-1 b pa1 grow-large w3 h3 br-100 ba bw1 pointer' onClick={doRotate}>\r\n                        <div \r\n                        className=' \r\n                        flex justify-center items-center'>\r\n                            <FontAwesomeIcon icon={icons.create} size='1x'/>\r\n                        </div>\r\n                        <div className='f7 measure mt1'>Add Record</div>\r\n                    </button>\r\n                </div>\r\n                {/* this makes the creation of records */}\r\n                <div className={`back h-100 flex justify-center items-center mt0`}>\r\n                        {!isEdit \r\n                        ? <Applicationform clickEvent={doRotate} route={service}/>\r\n                        : <ApplicationEdit\r\n                        clickEvent={doRotate} \r\n                        route={service} id={id}  \r\n                        name={name} describe={describe}\r\n                        support={support}\r\n                        />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useContext }  from 'react'\r\nimport {Str, Icons, Callarr} from '../Utilities/CustomTypes'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {DoSelected} from '../Utilities/FormUtilities'\r\nimport { fetchMainRoutes } from '../Utilities/FetchUtilities'\r\nimport {CurrentCustomerContext} from '../Context/CustomerContext'\r\n\r\nexport default function Call(props:{ icons: Icons, }){\r\n    const icons = props.icons\r\n    const [error, setError] =useState<Str>('')\r\n    const [needed, setneeded] = useState<Callarr>([])\r\n    const [routeData, setRouteData] = useState<Callarr>([])\r\n    const [filter, setFilter] = useState('')\r\n\r\n    useEffect(()=>{\r\n        fetchMainRoutes('Call', setRouteData, setError)\r\n    }, [])\r\n\r\n    let currentCustomer = useContext(CurrentCustomerContext)\r\n\r\n    useEffect(()=>{\r\n        if(routeData.length > 0 && filter !== ''){\r\n            setneeded(routeData.filter(a=> a.customer.id === currentCustomer.id && a.status.description === filter))\r\n        }else{\r\n            if(routeData.length > 0){\r\n                setneeded(routeData.filter(a=> a.customer.id === currentCustomer.id))\r\n            }\r\n        }\r\n    }, [routeData, currentCustomer.id, filter])\r\n\r\n   const getFilter = (data: string) =>{\r\n       setFilter(data)\r\n   }\r\n\r\n\r\n    return(\r\n        <div  className={`block2 w-90 flex justify-center items-center relative shadow-4 mt3 br4`}>\r\n            {needed.length > 0 ? <h1 className='customername f3 lh-title'>{needed[0].customer.name}</h1> : null}\r\n            <div className={`block1inner relative w-100 h-100 shadow-4 br4 `}>\r\n                <div className='front2'>\r\n                    <div className='absolute top-1 left-1 flex items-center b highlight verticaltext'>\r\n                        <FontAwesomeIcon icon={icons.header} size='2x'/>\r\n                        <div className='f6 measure lh-title mt2 textalt flex'>Call Log</div>\r\n                    </div>\r\n                    <div className={`relative flex w-100 flex-column items-start pa3 calllist overflow-y-auto scroll scroll2`}>\r\n                        <ul className='w-100'>\r\n                            <li className='flex justify-between items-center  ma1 pa1 w-100 h3 b f5 lh-title stick top--1 iconsbg text'>\r\n                                <div className='tablecol1'>Application</div>\r\n                                <div className='tablecol2'>Issues</div>\r\n                                <div className='tablecol3'>Call Status</div>\r\n                            </li>\r\n                                {needed.length > 0 && needed.map((a, i)=>{\r\n                                    return(\r\n                                        <li className='flex justify-between items-center ma1 pa1 w-100 shadow-1 h3 b' key={i*3}>\r\n                                            <div className='tablecol1 f5 lh-copy'>{a.application.name}</div>\r\n                                            <div className='tablecol2 f5 lh-copy'>{a.description}</div>\r\n                                            <div className='tablecol3'>\r\n                                                <DoSelected needed={a}/>\r\n                                            </div>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                                {console.log(error)}\r\n                        </ul>  \r\n                    </div>\r\n                    <div className='flex flex-row justify-center center w-60  h-50'>\r\n                        <h1 className='f3 mr2'>Filter:</h1>\r\n                        <div \r\n                        className='sel2 br3 f5 lh-copy items-center flex justify-center w4 pa2 ma1 tc b pointer'\r\n                        onClick= {()=> getFilter('Open')}\r\n                        >\r\n                            Open\r\n                        </div>\r\n                        <div className='sel1 br3 f6 lh-copy items-center flex justify-center w4 pa2 ma1 tc b pointer'\r\n                        onClick= {()=> getFilter('Closed')}\r\n                        >\r\n                            Close\r\n                        </div>\r\n                        <div className='sel3 br3 f6 lh-copy items-center flex justify-center w4 pa2 ma1 tc b pointer'\r\n                        onClick= {()=> getFilter('Re-Opened')}\r\n                        >\r\n                            Re-Opened\r\n                        </div>\r\n                        <div className='sel4 br3 f6 lh-copy items-center flex justify-center w4 pa2 ma1 tc b pointer'\r\n                        onClick= {()=> getFilter('AwaitingCustomer')}\r\n                        >\r\n                            AwaitingCustomer\r\n                        </div>\r\n                        <div className='br3 f6 lh-copy iconsbg text items-center flex justify-center w4 pa2 ma1 tc b pointer'\r\n                        onClick= {()=> getFilter('')}\r\n                        >\r\n                            Remove Filter\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {CurrentCustomerContext} from '../Context/CustomerContext'\r\nimport { StatTypes } from '../Utilities/CustomTypes'\r\nimport { singleFetch } from '../Utilities/FetchUtilities'\r\nimport { Line, PolarArea } from '@reactchartjs/react-chart.js'\r\n\r\n\r\n\r\n\r\n\r\nexport function Stats () {\r\n\r\n    const statObj={\r\n        id: 0,\r\n        openCalls: {\r\n            totalCalls: 0,\r\n            responded:0,\r\n            awaitingResponse: 0,\r\n        },\r\n        closedCalls:{\r\n            totalCalls: 0,\r\n            satisfactory: 0,\r\n            unsatisfactory: 0,\r\n        },\r\n        lastThreeMonths:{\r\n            month1: 0,\r\n            month2: 0,\r\n            month3: 0,\r\n        },\r\n        customer:{\r\n            id: 0,\r\n            name: ''\r\n        }\r\n    }\r\n\r\n\r\n      const options = {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }      \r\n\r\n    let currentCustomer = useContext(CurrentCustomerContext)\r\n    const [error, setError] =useState('')\r\n    const [stats, setStats] = useState<StatTypes>(statObj)\r\n      useEffect(()=>{\r\n        singleFetch(currentCustomer.id, setStats, setError)\r\n    }, [currentCustomer.id])\r\n\r\n    const data = {\r\n      labels: ['Month 1', 'Month 2', 'Month 3'],\r\n      datasets: [\r\n        {\r\n          label: 'Number of call in the last 3 months',\r\n          font: 16,\r\n          data: stats?.customer?.id > 0 && [stats.lastThreeMonths.month1, stats.lastThreeMonths.month2, stats.lastThreeMonths.month3],\r\n          fill: false,\r\n          backgroundColor: '#ef233c',\r\n          borderColor: 'rgba(255, 99, 132, 0.2)',\r\n          tension: 0.4,\r\n          borderWidth: 3,\r\n          pointBorderColor: '#2b2d42',\r\n          pointBorderWidth: 5,\r\n        },\r\n      ],\r\n    }\r\n\r\n    const openCalls = {\r\n      labels: ['Awaiting Response', 'Responded', 'Total Calls'],\r\n      datasets: [\r\n        {\r\n          label: 'Open Calls',\r\n          data: [stats.openCalls.awaitingResponse, stats.openCalls.responded, stats.openCalls.totalCalls],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.5)',\r\n            'rgba(153, 102, 255, 0.5)',\r\n            'rgba(54, 162, 235, 0.5)',\r\n          ],\r\n          borderWidth: 2,\r\n        },\r\n      ],\r\n    }\r\n\r\n    const closedCalls = {\r\n      labels: ['Unsatisfactory', 'Satisfactry', 'Total Calls'],\r\n      datasets: [\r\n        {\r\n          label: 'Closed Calls',\r\n          data: [stats.closedCalls.unsatisfactory, stats.closedCalls.satisfactory, stats.closedCalls.totalCalls],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.5)',\r\n            'rgba(75, 192, 192, 0.5)',\r\n            'rgba(255, 159, 64, 0.5)',\r\n          ],\r\n          borderWidth: 2,\r\n        },\r\n      ],\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='block3 w-90 flex justify-around flex-column shadow-4 mt3 br4 relative'>\r\n          {stats?.customer?.id > 0 ? <h1 className='customername f3 lh-title'>{stats.customer.name}</h1> : null}\r\n          <div className='h-100'>\r\n            \r\n                <div className='callline w-60 center h-50'>\r\n                    {\r\n                        stats?.customer?.id > 0 && (\r\n                            <>\r\n                             <Line data={data} options={options} type='Line' />   \r\n                            </>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className='w-100 h-60 flex flex-row justify-center'>\r\n                  <div className='w-50 flex flex-column items-center'>\r\n                    {stats?.customer?.id > 0 && (\r\n                      <>\r\n                        <PolarArea data={openCalls} type='polarArea' />\r\n                        <div className='f5 measure lh-copy b'>Open Calls</div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div className='w-50 flex flex-column items-center'>\r\n                    {stats?.customer?.id > 0 && (\r\n                      <>\r\n                        <PolarArea data={closedCalls} type='polarArea' />\r\n                        <div className='f5 measure lh-copy b'>Closed Calls</div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  {console.log(error)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {fetchCustomerRoutes, fetchMainRoutes} from './Utilities/FetchUtilities'\nimport {getCustomerId} from './Utilities/EventUtilities'\nimport {Arr2, Str, Num, Fetched} from './Utilities/CustomTypes'\nimport Aside from './Pages/Aside'\nimport Hero from './Pages/Hero'\nimport {CurrentCustomerContext} from './Context/CustomerContext'\nimport {Route, Switch, Link, useLocation} from 'react-router-dom'\nimport {faDatabase, faEdit, faPen, faTrashAlt, faPhoneSquare} from '@fortawesome/free-solid-svg-icons'\nimport Applications from './Pages/Application'\nimport Calls from './Pages/Calls'\nimport { Stats } from './Pages/Stats';\n\n\nfunction App() {\n  const [customers, setCustomers] = useState<Arr2>([])\n  const [asyncErr, setAsynErr] = useState <Str>('')\n  const [customerId, setCustomerId] = useState<Num>(0)\n  const [customerData, setCustomerData] = useState<Fetched>({id:0, data:[]})\n \n\n\n  useEffect(()=>{\n    fetchMainRoutes('Customer', setCustomers, setAsynErr)\n\n  }, [])\n\n  useEffect(()=>{\n    customerId && fetchCustomerRoutes(customerId, setCustomerData, setAsynErr)\n  }, [customerId])\n\n\n let location = useLocation()\n\n\n  return (\n    <div className=\"w-100 vh-100 flex flex-row\">\n\n      <aside className=\"w-25 flex justify-center items-center relative\">\n        <div className='absolute aside w-100 ml3 br4 flex justify-center items-center'>\n          <Aside customers={customers} setCustomerId={setCustomerId} getCustomerId={getCustomerId} asyncErr={asyncErr}/>\n        </div>\n      </aside>\n      <main className=\"w-75 flex flex-column items-center mt2\">\n        {customerId > 0 && (\n          <div className='flex flex-column w-90'>\n          <h1 className='f2 lh-title'>Main Dashboard</h1>\n          <div className='flex flex-row justify-between w-34 '>\n            <div className={`${location.pathname === '/statistics' ? 'a' : null}`}><Link to='/statistics'>Statistics</Link></div>\n            <div className={`${location.pathname === '/calls' ? 'a' : null}`}><Link to='/calls'>Calls</Link></div>\n            <div className={`${location.pathname === '/applications' ? 'a' : null}`}><Link to='/applications'>Applications</Link></div>\n          </div>\n        </div>\n        )}\n        <CurrentCustomerContext.Provider value={customerData}>\n          <Switch>\n            <Route exact path=\"/\">\n                <Hero/>\n            </Route>\n            {customerId > 0 ?  (\n              <Route path='/applications'>\n              <Applications\n                  service={'Application'}\n                  icons={{header: faDatabase, edit: faEdit, delete: faTrashAlt, create: faPen}}\n                  className={`block1 w-90 flex justify-center items-center relative shadow-4 mt3 br4`}\n                />\n              </Route>\n            ): <div className='flex justify-center items-center f3 textalt h-100 b'>Please click on a customer to view records</div>}\n            {customerId > 0 ? (\n              <Route path='/statistics'>\n               <Stats/>\n              </Route>\n            ) : <div className='flex justify-center items-center f3 textalt h-100 b'>Please click on a customer to view records</div>}\n            {customerId > 0 ? (\n              <Route path='/calls'>\n                <Calls icons={{header: faPhoneSquare, edit: faEdit, delete: faTrashAlt, create: faPen}}/>\n              </Route>\n            ) : <div className='flex justify-center items-center f3 textalt h-100 b'>Please click on a customer to view records</div>}\n          </Switch>\n        </CurrentCustomerContext.Provider>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons'\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}